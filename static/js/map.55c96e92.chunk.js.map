{"version":3,"sources":["components/common/map/Map.tsx"],"names":["DeckGLComponent","lazy","GoogleMapsComponent","BASEMAP_TYPES","useStyles","makeStyles","theme","map","backgroundColor","palette","grey","position","flex","tooltip","typography","caption","padding","spacing","borderRadius","shape","color","transform","display","top","left","width","height","marginLeft","borderLeft","borderRight","borderTop","Map","layers","basemap","useSelector","state","BASEMAPS","carto","classes","mapsAvailable","type","className"],"mappings":"4HAAA,sGAMA,MAAMA,EAAkBC,gBACtB,IACE,sDAIEC,EAAsBD,gBAC1B,IACE,gCAKEE,EACI,SADJA,EAEG,QAGHC,EAAYC,aAAYC,IAAD,CAC3BC,IAAK,CACHC,gBAAiBF,EAAMG,QAAQC,KAAK,IACpCC,SAAU,WACVC,KAAM,YAERC,QAAS,CACP,aAAc,IACTP,EAAMQ,WAAWC,QACpBJ,SAAU,WACVK,QAASV,EAAMW,QAAQ,EAAG,KAC1BC,aAAcZ,EAAMa,MAAMD,aAC1BV,gBAAiBF,EAAMG,QAAQC,KAAK,KACpCU,MAAO,4BACPC,UAAU,gCAAD,OAAkCf,EAAMW,QAAQ,KAAhD,QAET,WAAY,CACVK,QAAS,QACTX,SAAU,WACVY,IAAK,mBACLC,KAAM,MACNC,MAAO,EACPC,OAAQ,EACRC,WAAYrB,EAAMW,SAAS,GAC3BW,WAAW,GAAD,OAAKtB,EAAMW,QAAQ,GAAnB,wBACVY,YAAY,GAAD,OAAKvB,EAAMW,QAAQ,GAAnB,wBACXa,UAAU,GAAD,OAAKxB,EAAMW,QAAQ,GAAnB,oBAAiCX,EAAMG,QAAQC,KAAK,aAMtD,SAASqB,EAAT,GAA6C,IAAhC,OAAEC,GAA6B,EAEzD,MAAMC,EAAUC,aAAaC,GAAUC,WAASD,EAAME,MAAMJ,WACtDK,EAAUlC,IAEVmC,EAAgB,CACpB,CAACpC,GAAuB,IAAM,cAACH,EAAD,CAAiBgC,OAAQA,IACvD,CAAC7B,GAAsB,IAAM,cAACD,EAAD,CAAqB8B,OAAQA,KAG5D,IAAIzB,EAAMgC,EAAcN,EAAQO,MAC9BD,EAAcN,EAAQO,QAEtB,2DAGF,OAAO,qBAAKC,UAAWH,EAAQ/B,IAAxB,SAA8BA,GACtC,C","file":"static/js/map.55c96e92.chunk.js","sourcesContent":["import { lazy } from 'react';\nimport { useSelector } from 'react-redux';\nimport 'maplibre-gl/dist/maplibre-gl.css';\nimport { makeStyles } from '@material-ui/core';\nimport { BASEMAPS } from '@carto/react-basemaps';\n\nconst DeckGLComponent = lazy(\n  () =>\n    import(\n      /* webpackChunkName: 'deck-gl' */ 'components/common/map/DeckGLComponent'\n    ),\n);\nconst GoogleMapsComponent = lazy(\n  () =>\n    import(\n      /* webpackChunkName: 'google-map' */ 'components/common/map/GoogleMapsComponent'\n    ),\n);\n\nconst BASEMAP_TYPES = {\n  mapbox: 'mapbox',\n  gmaps: 'gmaps',\n};\n\nconst useStyles = makeStyles((theme) => ({\n  map: {\n    backgroundColor: theme.palette.grey[50],\n    position: 'relative',\n    flex: '1 1 auto',\n  },\n  tooltip: {\n    '& .content': {\n      ...theme.typography.caption,\n      position: 'relative',\n      padding: theme.spacing(1, 1.5),\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[900],\n      color: 'rgba(255, 255, 255, 0.75)',\n      transform: `translate(-50%, calc(-100% - ${theme.spacing(2.5)}px))`,\n\n      '& .arrow': {\n        display: 'block',\n        position: 'absolute',\n        top: 'calc(100% - 1px)',\n        left: '50%',\n        width: 0,\n        height: 0,\n        marginLeft: theme.spacing(-1),\n        borderLeft: `${theme.spacing(1)}px solid transparent`,\n        borderRight: `${theme.spacing(1)}px solid transparent`,\n        borderTop: `${theme.spacing(1)}px solid ${theme.palette.grey[900]}`,\n      },\n    },\n  },\n}));\n\nexport default function Map({ layers }: { layers: any[] }) {\n  // @ts-ignore\n  const basemap = useSelector((state) => BASEMAPS[state.carto.basemap]);\n  const classes = useStyles();\n\n  const mapsAvailable = {\n    [BASEMAP_TYPES.mapbox]: () => <DeckGLComponent layers={layers} />,\n    [BASEMAP_TYPES.gmaps]: () => <GoogleMapsComponent layers={layers} />,\n  };\n\n  let map = mapsAvailable[basemap.type] ? (\n    mapsAvailable[basemap.type]()\n  ) : (\n    <div>Not a valid map provider</div>\n  );\n\n  return <div className={classes.map}>{map}</div>;\n}\n"],"sourceRoot":""}